
--trigger1
DELIMITER //
CREATE TRIGGER update_salary_empleado
	AFTER UPDATE ON employees.salaries FOR EACH ROW
	BEGIN
		INSERT INTO employees.historial_salarios (emp_no,fecha_update,nuevo_salario,from_date,to_date) VALUES (OLD.emp_no,NOW(),NEW.salary,OLD.from_date,OLD.to_date);
	END;
//
DELIMITER ;

--triggerEvento2

DELIMITER //
CREATE PROCEDURE notificar_cumpleaños()
BEGIN
    DECLARE emp_id INT;

    DECLARE birthday_cursor CURSOR FOR
        SELECT emp_no
        FROM employees
        WHERE MONTH(birth_date) = MONTH(CURDATE()) AND DAYOFMONTH(birth_date) = DAYOFMONTH(CURDATE());

    DECLARE CONTINUE HANDLER FOR NOT FOUND SET emp_id = NULL;

    OPEN birthday_cursor;

    birthday_loop: LOOP
        FETCH birthday_cursor INTO emp_id;

        IF emp_id IS NULL THEN
            LEAVE birthday_loop;
        END IF;

        INSERT INTO notificationes_cumpleaños (emp_no, mensaje, fecha_notificacion)
        VALUES (emp_id, CONCAT('¡','Feliz Cumpleaños , ', (SELECT CONCAT(first_name,' ', last_name) FROM employees WHERE emp_no = emp_id), '!'), CURDATE());
    END LOOP;

    CLOSE birthday_cursor;
END //

DELIMITER ;


DELIMITER //

CREATE EVENT IF NOT EXISTS evento_cumpleaños
ON SCHEDULE
  EVERY 1 DAY
  STARTS CURRENT_DATE + INTERVAL 6 HOUR
DO
BEGIN
    CALL notificar_cumpleaños();
END //

DELIMITER ;

--procedimiento1

DELIMITER //

CREATE PROCEDURE promocion_empleado(IN emp_id INT, IN new_title VARCHAR(50))
BEGIN
    DECLARE current_title VARCHAR(50);

    SELECT title INTO current_title
    FROM employees.titles
    WHERE emp_no = emp_id AND to_date = '9999-01-01';

    UPDATE employees.titles
    SET to_date = CURDATE()
    WHERE emp_no = emp_id AND to_date = '9999-01-01';

    INSERT INTO employees.titles (emp_no, title, from_date, to_date)
    VALUES (emp_id, new_title, CURDATE(), '9999-01-01');

    INSERT INTO employees.historial_promociones (emp_no, antiguo_titulo, nuevo_titulo, fecha_promocion)
    VALUES (emp_id, current_title, new_title, CURDATE());
END;

//
DELIMITER ;

CALL promocion_empleado(10001,'Junior Engineer')

--procedimiento2

DELIMITER //

CREATE PROCEDURE generar_informe_rendimiento()
BEGIN
    DECLARE salario_promedio DECIMAL(10, 2);
    SELECT AVG(salary) INTO salario_promedio FROM employees.salaries;

   SELECT 'Salario Promedio:', salario_promedio AS Resultado;

    SELECT dept_no , COUNT(*) AS cantidad_empleados
    FROM employees.dept_emp
    GROUP BY dept_no;

   SELECT 'Salario Máximo:', MAX(salary) AS salario_maximo FROM employees.salaries;
    SELECT 'Salario Mínimo:', MIN(salary) AS salario_minimo FROM employees.salaries;

    SELECT 'Cantidad de Empleados por Género:', gender, COUNT(*) AS cantidad_empleados
    FROM employees
    GROUP BY gender;


END;

//
DELIMITER ;

--CONSULTA 1

 SELECT
    d.dept_name AS Departamento,
    SUM(s.salary) AS Total_Salarios_Departamento,
    CONCAT(e.first_name ,' ',e.last_name) AS Empleado_Que_Mas_Cobra,
    MAX(s.salary) AS Salario_Empleado
FROM
    employees.departments d
    JOIN employees.dept_emp de ON d.dept_no = de.dept_no
    JOIN employees.salaries s ON de.emp_no = s.emp_no
    JOIN employees.employees e ON de.emp_no = e.emp_no
WHERE
    de.to_date = '9999-01-01'
GROUP BY
    d.dept_no, d.dept_name
ORDER BY
    total_salarios_departamento DESC;


   --CONSULTA 2
  SELECT
    d.dept_name AS Departamento,
    MAX(s.salary) AS Salario_Maximo,
    MIN(s.salary) AS Salario_Minimo,
    MAX(s.salary) - MIN(s.salary) AS Variacion_Salarial
FROM
    employees.departments d
    JOIN employees.dept_emp de ON d.dept_no = de.dept_no
    JOIN employees.salaries s ON de.emp_no = s.emp_no
WHERE
    de.to_date = '9999-01-01'
GROUP BY
    d.dept_no, d.dept_name
ORDER BY
    Variacion_Salarial DESC;

   --CONSULTA 3
   SELECT
    d.dept_name,
    COUNT(DISTINCT e.emp_no) AS Cantidad_Empleados,
    AVG(DATEDIFF(de.to_date, de.from_date)) AS Duracion_Promedio_Dias
FROM
    employees.departments d
    JOIN employees.dept_emp de ON d.dept_no = de.dept_no
    JOIN employees.employees e ON de.emp_no = e.emp_no
GROUP BY
    d.dept_no, d.dept_name
ORDER BY
    Duracion_Promedio_Dias DESC;


